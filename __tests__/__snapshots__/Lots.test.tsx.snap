// Jest Snapshot v1, https://goo.gl/fbAQLP

exports[`Lots matches snapshot 1`] = `
<RCTSafeAreaView
  emulateUnlessSupported={true}
  style={
    Object {
      "backgroundColor": "white",
      "flex": 1,
      "padding": 10,
    }
  }
  testID="lots"
>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    visible={false}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "top": "30%",
        }
      }
    >
      <Text>
        Add Vehicle to P
        0
      </Text>
      <TextInput
        allowFontScaling={true}
        onChangeText={[Function]}
        placeholder="Enterv reg. number"
        placeholderTextColor="grey"
        rejectResponderTermination={true}
        style={
          Object {
            "borderColor": "grey",
            "borderRadius": 5,
            "borderWidth": 1,
            "marginBottom": 10,
            "padding": 5,
          }
        }
        underlineColorAndroid="transparent"
      />
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-around",
            "width": "80%",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={
            Object {
              "disabled": true,
            }
          }
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
                Object {},
              ]
            }
          >
            <Text
              disabled={true}
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                  Object {
                    "color": "#cdcdcd",
                  },
                ]
              }
            >
              Add
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="button"
          accessibilityState={Object {}}
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <Modal
    animationType="slide"
    hardwareAccelerated={false}
    onShow={[Function]}
    visible={false}
  >
    <View
      style={
        Object {
          "alignItems": "center",
          "justifyContent": "center",
          "top": "30%",
        }
      }
    >
      <Text>
        Pay and Remove Vehicle from P
        0
      </Text>
      <Text>
        Total hours: 
        0
      </Text>
      <Text>
        Total Amount:
        0
      </Text>
      <View
        style={
          Object {
            "alignItems": "center",
            "flexDirection": "row",
            "justifyContent": "space-around",
            "width": "80%",
          }
        }
      >
        <View
          accessibilityRole="button"
          accessibilityState={Object {}}
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Remove
            </Text>
          </View>
        </View>
        <View
          accessibilityRole="button"
          accessibilityState={Object {}}
          accessible={true}
          focusable={true}
          onClick={[Function]}
          onResponderGrant={[Function]}
          onResponderMove={[Function]}
          onResponderRelease={[Function]}
          onResponderTerminate={[Function]}
          onResponderTerminationRequest={[Function]}
          onStartShouldSetResponder={[Function]}
          style={
            Object {
              "opacity": 1,
            }
          }
        >
          <View
            style={
              Array [
                Object {},
              ]
            }
          >
            <Text
              style={
                Array [
                  Object {
                    "color": "#007AFF",
                    "fontSize": 18,
                    "margin": 8,
                    "textAlign": "center",
                  },
                ]
              }
            >
              Cancel
            </Text>
          </View>
        </View>
      </View>
    </View>
  </Modal>
  <View
    accessible={true}
    focusable={true}
    onClick={[Function]}
    onResponderGrant={[Function]}
    onResponderMove={[Function]}
    onResponderRelease={[Function]}
    onResponderTerminate={[Function]}
    onResponderTerminationRequest={[Function]}
    onStartShouldSetResponder={[Function]}
    style={
      Object {
        "backgroundColor": "green",
        "opacity": 1,
        "width": "100%",
      }
    }
  >
    <RCTScrollView
      data={
        Array [
          Object {
            "free": true,
            "id": 0,
            "reg": "",
            "start": 1899-12-30T18:38:50.000Z,
          },
          Object {
            "free": true,
            "id": 1,
            "reg": "",
            "start": 1899-12-30T18:38:50.000Z,
          },
        ]
      }
      disableVirtualization={false}
      getItem={[Function]}
      getItemCount={[Function]}
      horizontal={false}
      initialNumToRender={10}
      keyExtractor={[Function]}
      maxToRenderPerBatch={10}
      onContentSizeChange={[Function]}
      onEndReachedThreshold={2}
      onLayout={[Function]}
      onMomentumScrollEnd={[Function]}
      onScroll={[Function]}
      onScrollBeginDrag={[Function]}
      onScrollEndDrag={[Function]}
      removeClippedSubviews={false}
      renderItem={[Function]}
      scrollEventThrottle={50}
      stickyHeaderIndices={Array []}
      updateCellsBatchingPeriod={50}
      viewabilityConfigCallbackPairs={Array []}
      windowSize={21}
    >
      <View>
        <View
          onLayout={[Function]}
          style={null}
        >
          <View
            style={
              Object {
                "flexDirection": "row",
              }
            }
          >
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "blue",
                    "borderRadius": 10,
                    "flexDirection": "row",
                    "height": "50px",
                    "justifyContent": "space-around",
                    "margin": "10px",
                    "marginHorizontal": 10,
                    "marginVertical": 15,
                    "padding": 20,
                    "width": "50px",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  P
                  0
                </Text>
                <Text
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  Free
                </Text>
              </View>
            </View>
            <View
              accessible={true}
              focusable={true}
              onClick={[Function]}
              onResponderGrant={[Function]}
              onResponderMove={[Function]}
              onResponderRelease={[Function]}
              onResponderTerminate={[Function]}
              onResponderTerminationRequest={[Function]}
              onStartShouldSetResponder={[Function]}
              style={
                Object {
                  "opacity": 1,
                }
              }
            >
              <View
                style={
                  Object {
                    "alignItems": "center",
                    "backgroundColor": "blue",
                    "borderRadius": 10,
                    "flexDirection": "row",
                    "height": "50px",
                    "justifyContent": "space-around",
                    "margin": "10px",
                    "marginHorizontal": 10,
                    "marginVertical": 15,
                    "padding": 20,
                    "width": "50px",
                  }
                }
              >
                <Text
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  P
                  1
                </Text>
                <Text
                  style={
                    Object {
                      "color": "white",
                    }
                  }
                >
                  Free
                </Text>
              </View>
            </View>
          </View>
        </View>
      </View>
    </RCTScrollView>
  </View>
</RCTSafeAreaView>
`;
